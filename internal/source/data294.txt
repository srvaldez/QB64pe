int32 *_FUNC_IDELAYOUTBOX_LONG_IDELAYOUTBOX=NULL;
if(_FUNC_IDELAYOUTBOX_LONG_IDELAYOUTBOX==NULL){
_FUNC_IDELAYOUTBOX_LONG_IDELAYOUTBOX=(int32*)mem_static_malloc(4);
*_FUNC_IDELAYOUTBOX_LONG_IDELAYOUTBOX=0;
}
int32 *_FUNC_IDELAYOUTBOX_LONG_FOCUS=NULL;
if(_FUNC_IDELAYOUTBOX_LONG_FOCUS==NULL){
_FUNC_IDELAYOUTBOX_LONG_FOCUS=(int32*)mem_static_malloc(4);
*_FUNC_IDELAYOUTBOX_LONG_FOCUS=0;
}
void *_FUNC_IDELAYOUTBOX_UDT_P=NULL;
if(_FUNC_IDELAYOUTBOX_UDT_P==NULL){
_FUNC_IDELAYOUTBOX_UDT_P=(void*)mem_static_malloc(20);
memset(_FUNC_IDELAYOUTBOX_UDT_P,0,20);
}
ptrszint *_FUNC_IDELAYOUTBOX_ARRAY_UDT_O=NULL;
if (!_FUNC_IDELAYOUTBOX_ARRAY_UDT_O){
_FUNC_IDELAYOUTBOX_ARRAY_UDT_O=(ptrszint*)mem_static_malloc(9*ptrsz);
new_mem_lock();
mem_lock_tmp->type=4;
((ptrszint*)_FUNC_IDELAYOUTBOX_ARRAY_UDT_O)[8]=(ptrszint)mem_lock_tmp;
_FUNC_IDELAYOUTBOX_ARRAY_UDT_O[2]=0;
_FUNC_IDELAYOUTBOX_ARRAY_UDT_O[4]=2147483647;
_FUNC_IDELAYOUTBOX_ARRAY_UDT_O[5]=0;
_FUNC_IDELAYOUTBOX_ARRAY_UDT_O[6]=0;
_FUNC_IDELAYOUTBOX_ARRAY_UDT_O[0]=(ptrszint)nothingvalue;
}
qbs *_FUNC_IDELAYOUTBOX_STRING1_SEP=NULL;
if(_FUNC_IDELAYOUTBOX_STRING1_SEP==NULL){
_FUNC_IDELAYOUTBOX_STRING1_SEP=qbs_new_fixed((uint8*)mem_static_malloc(1),1,0);
memset(_FUNC_IDELAYOUTBOX_STRING1_SEP->chr,0,1);
}
int32 *_FUNC_IDELAYOUTBOX_LONG_I=NULL;
if(_FUNC_IDELAYOUTBOX_LONG_I==NULL){
_FUNC_IDELAYOUTBOX_LONG_I=(int32*)mem_static_malloc(4);
*_FUNC_IDELAYOUTBOX_LONG_I=0;
}
int32 pass6142;
int32 pass6143;
int32 *_FUNC_IDELAYOUTBOX_LONG_ALCHK=NULL;
if(_FUNC_IDELAYOUTBOX_LONG_ALCHK==NULL){
_FUNC_IDELAYOUTBOX_LONG_ALCHK=(int32*)mem_static_malloc(4);
*_FUNC_IDELAYOUTBOX_LONG_ALCHK=0;
}
int32 *_FUNC_IDELAYOUTBOX_LONG_KCCHK=NULL;
if(_FUNC_IDELAYOUTBOX_LONG_KCCHK==NULL){
_FUNC_IDELAYOUTBOX_LONG_KCCHK=(int32*)mem_static_malloc(4);
*_FUNC_IDELAYOUTBOX_LONG_KCCHK=0;
}
int32 *_FUNC_IDELAYOUTBOX_LONG_AICHK=NULL;
if(_FUNC_IDELAYOUTBOX_LONG_AICHK==NULL){
_FUNC_IDELAYOUTBOX_LONG_AICHK=(int32*)mem_static_malloc(4);
*_FUNC_IDELAYOUTBOX_LONG_AICHK=0;
}
int32 *_FUNC_IDELAYOUTBOX_LONG_AISBOX=NULL;
if(_FUNC_IDELAYOUTBOX_LONG_AISBOX==NULL){
_FUNC_IDELAYOUTBOX_LONG_AISBOX=(int32*)mem_static_malloc(4);
*_FUNC_IDELAYOUTBOX_LONG_AISBOX=0;
}
qbs *_FUNC_IDELAYOUTBOX_STRING_A2=NULL;
if (!_FUNC_IDELAYOUTBOX_STRING_A2)_FUNC_IDELAYOUTBOX_STRING_A2=qbs_new(0,0);
byte_element_struct *byte_element_6144=NULL;
if (!byte_element_6144){
if ((mem_static_pointer+=12)<mem_static_limit) byte_element_6144=(byte_element_struct*)(mem_static_pointer-12); else byte_element_6144=(byte_element_struct*)mem_static_malloc(12);
}
int32 *_FUNC_IDELAYOUTBOX_LONG_AISSYMUP=NULL;
if(_FUNC_IDELAYOUTBOX_LONG_AISSYMUP==NULL){
_FUNC_IDELAYOUTBOX_LONG_AISSYMUP=(int32*)mem_static_malloc(4);
*_FUNC_IDELAYOUTBOX_LONG_AISSYMUP=0;
}
int32 *_FUNC_IDELAYOUTBOX_LONG_AISSYMDN=NULL;
if(_FUNC_IDELAYOUTBOX_LONG_AISSYMDN==NULL){
_FUNC_IDELAYOUTBOX_LONG_AISSYMDN=(int32*)mem_static_malloc(4);
*_FUNC_IDELAYOUTBOX_LONG_AISSYMDN=0;
}
int32 *_FUNC_IDELAYOUTBOX_LONG_ISCHK=NULL;
if(_FUNC_IDELAYOUTBOX_LONG_ISCHK==NULL){
_FUNC_IDELAYOUTBOX_LONG_ISCHK=(int32*)mem_static_malloc(4);
*_FUNC_IDELAYOUTBOX_LONG_ISCHK=0;
}
int32 *_FUNC_IDELAYOUTBOX_LONG_OKBUT=NULL;
if(_FUNC_IDELAYOUTBOX_LONG_OKBUT==NULL){
_FUNC_IDELAYOUTBOX_LONG_OKBUT=(int32*)mem_static_malloc(4);
*_FUNC_IDELAYOUTBOX_LONG_OKBUT=0;
}
int32 *_FUNC_IDELAYOUTBOX_LONG_CABUT=NULL;
if(_FUNC_IDELAYOUTBOX_LONG_CABUT==NULL){
_FUNC_IDELAYOUTBOX_LONG_CABUT=(int32*)mem_static_malloc(4);
*_FUNC_IDELAYOUTBOX_LONG_CABUT=0;
}
int64 fornext_value6146;
int64 fornext_finalvalue6146;
int64 fornext_step6146;
uint8 fornext_step_negative6146;
int32 *_FUNC_IDELAYOUTBOX_LONG_F=NULL;
if(_FUNC_IDELAYOUTBOX_LONG_F==NULL){
_FUNC_IDELAYOUTBOX_LONG_F=(int32*)mem_static_malloc(4);
*_FUNC_IDELAYOUTBOX_LONG_F=0;
}
int32 *_FUNC_IDELAYOUTBOX_LONG_CX=NULL;
if(_FUNC_IDELAYOUTBOX_LONG_CX==NULL){
_FUNC_IDELAYOUTBOX_LONG_CX=(int32*)mem_static_malloc(4);
*_FUNC_IDELAYOUTBOX_LONG_CX=0;
}
int32 *_FUNC_IDELAYOUTBOX_LONG_CY=NULL;
if(_FUNC_IDELAYOUTBOX_LONG_CY==NULL){
_FUNC_IDELAYOUTBOX_LONG_CY=(int32*)mem_static_malloc(4);
*_FUNC_IDELAYOUTBOX_LONG_CY=0;
}
int64 fornext_value6149;
int64 fornext_finalvalue6149;
int64 fornext_step6149;
uint8 fornext_step_negative6149;
int32 *_FUNC_IDELAYOUTBOX_LONG_OLDFOCUS=NULL;
if(_FUNC_IDELAYOUTBOX_LONG_OLDFOCUS==NULL){
_FUNC_IDELAYOUTBOX_LONG_OLDFOCUS=(int32*)mem_static_malloc(4);
*_FUNC_IDELAYOUTBOX_LONG_OLDFOCUS=0;
}
byte_element_struct *byte_element_6150=NULL;
if (!byte_element_6150){
if ((mem_static_pointer+=12)<mem_static_limit) byte_element_6150=(byte_element_struct*)(mem_static_pointer-12); else byte_element_6150=(byte_element_struct*)mem_static_malloc(12);
}
int32 *_FUNC_IDELAYOUTBOX_LONG_LASTFOCUS=NULL;
if(_FUNC_IDELAYOUTBOX_LONG_LASTFOCUS==NULL){
_FUNC_IDELAYOUTBOX_LONG_LASTFOCUS=(int32*)mem_static_malloc(4);
*_FUNC_IDELAYOUTBOX_LONG_LASTFOCUS=0;
}
int32 *_FUNC_IDELAYOUTBOX_LONG_CHANGE=NULL;
if(_FUNC_IDELAYOUTBOX_LONG_CHANGE==NULL){
_FUNC_IDELAYOUTBOX_LONG_CHANGE=(int32*)mem_static_malloc(4);
*_FUNC_IDELAYOUTBOX_LONG_CHANGE=0;
}
int32 *_FUNC_IDELAYOUTBOX_LONG_MOUSEDOWN=NULL;
if(_FUNC_IDELAYOUTBOX_LONG_MOUSEDOWN==NULL){
_FUNC_IDELAYOUTBOX_LONG_MOUSEDOWN=(int32*)mem_static_malloc(4);
*_FUNC_IDELAYOUTBOX_LONG_MOUSEDOWN=0;
}
int32 *_FUNC_IDELAYOUTBOX_LONG_MOUSEUP=NULL;
if(_FUNC_IDELAYOUTBOX_LONG_MOUSEUP==NULL){
_FUNC_IDELAYOUTBOX_LONG_MOUSEUP=(int32*)mem_static_malloc(4);
*_FUNC_IDELAYOUTBOX_LONG_MOUSEUP=0;
}
int32 *_FUNC_IDELAYOUTBOX_LONG_ALT=NULL;
if(_FUNC_IDELAYOUTBOX_LONG_ALT==NULL){
_FUNC_IDELAYOUTBOX_LONG_ALT=(int32*)mem_static_malloc(4);
*_FUNC_IDELAYOUTBOX_LONG_ALT=0;
}
int32 *_FUNC_IDELAYOUTBOX_LONG_OLDALT=NULL;
if(_FUNC_IDELAYOUTBOX_LONG_OLDALT==NULL){
_FUNC_IDELAYOUTBOX_LONG_OLDALT=(int32*)mem_static_malloc(4);
*_FUNC_IDELAYOUTBOX_LONG_OLDALT=0;
}
qbs *_FUNC_IDELAYOUTBOX_STRING_ALTLETTER=NULL;
if (!_FUNC_IDELAYOUTBOX_STRING_ALTLETTER)_FUNC_IDELAYOUTBOX_STRING_ALTLETTER=qbs_new(0,0);
byte_element_struct *byte_element_6152=NULL;
if (!byte_element_6152){
if ((mem_static_pointer+=12)<mem_static_limit) byte_element_6152=(byte_element_struct*)(mem_static_pointer-12); else byte_element_6152=(byte_element_struct*)mem_static_malloc(12);
}
int32 *_FUNC_IDELAYOUTBOX_LONG_K=NULL;
if(_FUNC_IDELAYOUTBOX_LONG_K==NULL){
_FUNC_IDELAYOUTBOX_LONG_K=(int32*)mem_static_malloc(4);
*_FUNC_IDELAYOUTBOX_LONG_K=0;
}
int32 *_FUNC_IDELAYOUTBOX_LONG_INFO=NULL;
if(_FUNC_IDELAYOUTBOX_LONG_INFO==NULL){
_FUNC_IDELAYOUTBOX_LONG_INFO=(int32*)mem_static_malloc(4);
*_FUNC_IDELAYOUTBOX_LONG_INFO=0;
}
int32 *_FUNC_IDELAYOUTBOX_LONG_INVDATA=NULL;
if(_FUNC_IDELAYOUTBOX_LONG_INVDATA==NULL){
_FUNC_IDELAYOUTBOX_LONG_INVDATA=(int32*)mem_static_malloc(4);
*_FUNC_IDELAYOUTBOX_LONG_INVDATA=0;
}
int64 fornext_value6154;
int64 fornext_finalvalue6154;
int64 fornext_step6154;
uint8 fornext_step_negative6154;
int32 *_FUNC_IDELAYOUTBOX_LONG_FOCUSOFFSET=NULL;
if(_FUNC_IDELAYOUTBOX_LONG_FOCUSOFFSET==NULL){
_FUNC_IDELAYOUTBOX_LONG_FOCUSOFFSET=(int32*)mem_static_malloc(4);
*_FUNC_IDELAYOUTBOX_LONG_FOCUSOFFSET=0;
}
qbs *_FUNC_IDELAYOUTBOX_STRING_A=NULL;
if (!_FUNC_IDELAYOUTBOX_STRING_A)_FUNC_IDELAYOUTBOX_STRING_A=qbs_new(0,0);
int32 pass6155;
byte_element_struct *byte_element_6156=NULL;
if (!byte_element_6156){
if ((mem_static_pointer+=12)<mem_static_limit) byte_element_6156=(byte_element_struct*)(mem_static_pointer-12); else byte_element_6156=(byte_element_struct*)mem_static_malloc(12);
}
int32 pass6157;
byte_element_struct *byte_element_6158=NULL;
if (!byte_element_6158){
if ((mem_static_pointer+=12)<mem_static_limit) byte_element_6158=(byte_element_struct*)(mem_static_pointer-12); else byte_element_6158=(byte_element_struct*)mem_static_malloc(12);
}
int32 *_FUNC_IDELAYOUTBOX_LONG_RETVAL=NULL;
if(_FUNC_IDELAYOUTBOX_LONG_RETVAL==NULL){
_FUNC_IDELAYOUTBOX_LONG_RETVAL=(int32*)mem_static_malloc(4);
*_FUNC_IDELAYOUTBOX_LONG_RETVAL=0;
}
int16 *_FUNC_IDELAYOUTBOX_INTEGER_OPTCHG=NULL;
if(_FUNC_IDELAYOUTBOX_INTEGER_OPTCHG==NULL){
_FUNC_IDELAYOUTBOX_INTEGER_OPTCHG=(int16*)mem_static_malloc(2);
*_FUNC_IDELAYOUTBOX_INTEGER_OPTCHG=0;
}
int16 *_FUNC_IDELAYOUTBOX_INTEGER_V=NULL;
if(_FUNC_IDELAYOUTBOX_INTEGER_V==NULL){
_FUNC_IDELAYOUTBOX_INTEGER_V=(int16*)mem_static_malloc(2);
*_FUNC_IDELAYOUTBOX_INTEGER_V=0;
}
