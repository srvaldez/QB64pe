qbs *_FUNC_PARSECMDLINEARGS_STRING_PARSECMDLINEARGS=NULL;
if (!_FUNC_PARSECMDLINEARGS_STRING_PARSECMDLINEARGS)_FUNC_PARSECMDLINEARGS_STRING_PARSECMDLINEARGS=qbs_new(0,0);
int32 *_FUNC_PARSECMDLINEARGS_LONG_I=NULL;
if(_FUNC_PARSECMDLINEARGS_LONG_I==NULL){
_FUNC_PARSECMDLINEARGS_LONG_I=(int32*)mem_static_malloc(4);
*_FUNC_PARSECMDLINEARGS_LONG_I=0;
}
int64 fornext_value2166;
int64 fornext_finalvalue2166;
int64 fornext_step2166;
uint8 fornext_step_negative2166;
qbs *_FUNC_PARSECMDLINEARGS_STRING_TOKEN=NULL;
if (!_FUNC_PARSECMDLINEARGS_STRING_TOKEN)_FUNC_PARSECMDLINEARGS_STRING_TOKEN=qbs_new(0,0);
static qbs *sc_2167=qbs_new(0,0);
int32 *_FUNC_PARSECMDLINEARGS_LONG_CMDLINESWITCH=NULL;
if(_FUNC_PARSECMDLINEARGS_LONG_CMDLINESWITCH==NULL){
_FUNC_PARSECMDLINEARGS_LONG_CMDLINESWITCH=(int32*)mem_static_malloc(4);
*_FUNC_PARSECMDLINEARGS_LONG_CMDLINESWITCH=0;
}
int32 *_FUNC_PARSECMDLINEARGS_LONG_SETTINGSMODE=NULL;
if(_FUNC_PARSECMDLINEARGS_LONG_SETTINGSMODE==NULL){
_FUNC_PARSECMDLINEARGS_LONG_SETTINGSMODE=(int32*)mem_static_malloc(4);
*_FUNC_PARSECMDLINEARGS_LONG_SETTINGSMODE=0;
}
static qbs *sc_2195=qbs_new(0,0);
qbs *_FUNC_PARSECMDLINEARGS_STRING_DEBUGINFOINIWARNING=NULL;
if (!_FUNC_PARSECMDLINEARGS_STRING_DEBUGINFOINIWARNING)_FUNC_PARSECMDLINEARGS_STRING_DEBUGINFOINIWARNING=qbs_new(0,0);
int32 pass2211;
int32 pass2213;
int32 pass2219;
static qbs *sc_2220=qbs_new(0,0);
qbs *_FUNC_PARSECMDLINEARGS_STRING_PASSEDFILENAME=NULL;
if (!_FUNC_PARSECMDLINEARGS_STRING_PASSEDFILENAME)_FUNC_PARSECMDLINEARGS_STRING_PASSEDFILENAME=qbs_new(0,0);
byte_element_struct *byte_element_2221=NULL;
if (!byte_element_2221){
if ((mem_static_pointer+=12)<mem_static_limit) byte_element_2221=(byte_element_struct*)(mem_static_pointer-12); else byte_element_2221=(byte_element_struct*)mem_static_malloc(12);
}
byte_element_struct *byte_element_2223=NULL;
if (!byte_element_2223){
if ((mem_static_pointer+=12)<mem_static_limit) byte_element_2223=(byte_element_struct*)(mem_static_pointer-12); else byte_element_2223=(byte_element_struct*)mem_static_malloc(12);
}
