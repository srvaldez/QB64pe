qbs *_SUB_IDEDRAWOBJ_STRING1_SEP=NULL;
if(_SUB_IDEDRAWOBJ_STRING1_SEP==NULL){
_SUB_IDEDRAWOBJ_STRING1_SEP=qbs_new_fixed((uint8*)mem_static_malloc(1),1,0);
memset(_SUB_IDEDRAWOBJ_STRING1_SEP->chr,0,1);
}
int32 *_SUB_IDEDRAWOBJ_LONG_X=NULL;
if(_SUB_IDEDRAWOBJ_LONG_X==NULL){
_SUB_IDEDRAWOBJ_LONG_X=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_X=0;
}
int32 *_SUB_IDEDRAWOBJ_LONG_Y=NULL;
if(_SUB_IDEDRAWOBJ_LONG_Y==NULL){
_SUB_IDEDRAWOBJ_LONG_Y=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_Y=0;
}
qbs *_SUB_IDEDRAWOBJ_STRING_A=NULL;
if (!_SUB_IDEDRAWOBJ_STRING_A)_SUB_IDEDRAWOBJ_STRING_A=qbs_new(0,0);
int32 *_SUB_IDEDRAWOBJ_LONG_X2=NULL;
if(_SUB_IDEDRAWOBJ_LONG_X2==NULL){
_SUB_IDEDRAWOBJ_LONG_X2=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_X2=0;
}
int32 pass5668;
int32 pass5669;
int32 pass5670;
byte_element_struct *byte_element_5671=NULL;
if (!byte_element_5671){
if ((mem_static_pointer+=12)<mem_static_limit) byte_element_5671=(byte_element_struct*)(mem_static_pointer-12); else byte_element_5671=(byte_element_struct*)mem_static_malloc(12);
}
byte_element_struct *byte_element_5672=NULL;
if (!byte_element_5672){
if ((mem_static_pointer+=12)<mem_static_limit) byte_element_5672=(byte_element_struct*)(mem_static_pointer-12); else byte_element_5672=(byte_element_struct*)mem_static_malloc(12);
}
int32 *_SUB_IDEDRAWOBJ_LONG_CX=NULL;
if(_SUB_IDEDRAWOBJ_LONG_CX==NULL){
_SUB_IDEDRAWOBJ_LONG_CX=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_CX=0;
}
int32 *_SUB_IDEDRAWOBJ_LONG_TX=NULL;
if(_SUB_IDEDRAWOBJ_LONG_TX==NULL){
_SUB_IDEDRAWOBJ_LONG_TX=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_TX=0;
}
byte_element_struct *byte_element_5673=NULL;
if (!byte_element_5673){
if ((mem_static_pointer+=12)<mem_static_limit) byte_element_5673=(byte_element_struct*)(mem_static_pointer-12); else byte_element_5673=(byte_element_struct*)mem_static_malloc(12);
}
int32 *_SUB_IDEDRAWOBJ_LONG_SX1=NULL;
if(_SUB_IDEDRAWOBJ_LONG_SX1==NULL){
_SUB_IDEDRAWOBJ_LONG_SX1=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_SX1=0;
}
int32 *_SUB_IDEDRAWOBJ_LONG_SX2=NULL;
if(_SUB_IDEDRAWOBJ_LONG_SX2==NULL){
_SUB_IDEDRAWOBJ_LONG_SX2=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_SX2=0;
}
int32 *_SUB_IDEDRAWOBJ_LONG_COLORCHAR=NULL;
if(_SUB_IDEDRAWOBJ_LONG_COLORCHAR==NULL){
_SUB_IDEDRAWOBJ_LONG_COLORCHAR=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_COLORCHAR=0;
}
int64 fornext_value5675;
int64 fornext_finalvalue5675;
int64 fornext_step5675;
uint8 fornext_step_negative5675;
byte_element_struct *byte_element_5676=NULL;
if (!byte_element_5676){
if ((mem_static_pointer+=12)<mem_static_limit) byte_element_5676=(byte_element_struct*)(mem_static_pointer-12); else byte_element_5676=(byte_element_struct*)mem_static_malloc(12);
}
int32 pass5677;
int32 pass5678;
int32 *_SUB_IDEDRAWOBJ_LONG_W=NULL;
if(_SUB_IDEDRAWOBJ_LONG_W==NULL){
_SUB_IDEDRAWOBJ_LONG_W=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_W=0;
}
int32 *_SUB_IDEDRAWOBJ_LONG_M=NULL;
if(_SUB_IDEDRAWOBJ_LONG_M==NULL){
_SUB_IDEDRAWOBJ_LONG_M=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_M=0;
}
int32 *_SUB_IDEDRAWOBJ_LONG_S=NULL;
if(_SUB_IDEDRAWOBJ_LONG_S==NULL){
_SUB_IDEDRAWOBJ_LONG_S=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_S=0;
}
int32 *_SUB_IDEDRAWOBJ_LONG_N=NULL;
if(_SUB_IDEDRAWOBJ_LONG_N==NULL){
_SUB_IDEDRAWOBJ_LONG_N=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_N=0;
}
int32 *_SUB_IDEDRAWOBJ_LONG_V1=NULL;
if(_SUB_IDEDRAWOBJ_LONG_V1==NULL){
_SUB_IDEDRAWOBJ_LONG_V1=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_V1=0;
}
qbs *_SUB_IDEDRAWOBJ_STRING_A3=NULL;
if (!_SUB_IDEDRAWOBJ_STRING_A3)_SUB_IDEDRAWOBJ_STRING_A3=qbs_new(0,0);
int32 *_SUB_IDEDRAWOBJ_LONG_I2=NULL;
if(_SUB_IDEDRAWOBJ_LONG_I2==NULL){
_SUB_IDEDRAWOBJ_LONG_I2=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_I2=0;
}
int64 fornext_value5680;
int64 fornext_finalvalue5680;
int64 fornext_step5680;
uint8 fornext_step_negative5680;
byte_element_struct *byte_element_5681=NULL;
if (!byte_element_5681){
if ((mem_static_pointer+=12)<mem_static_limit) byte_element_5681=(byte_element_struct*)(mem_static_pointer-12); else byte_element_5681=(byte_element_struct*)mem_static_malloc(12);
}
qbs *_SUB_IDEDRAWOBJ_STRING_A2=NULL;
if (!_SUB_IDEDRAWOBJ_STRING_A2)_SUB_IDEDRAWOBJ_STRING_A2=qbs_new(0,0);
byte_element_struct *byte_element_5682=NULL;
if (!byte_element_5682){
if ((mem_static_pointer+=12)<mem_static_limit) byte_element_5682=(byte_element_struct*)(mem_static_pointer-12); else byte_element_5682=(byte_element_struct*)mem_static_malloc(12);
}
int32 *_SUB_IDEDRAWOBJ_LONG_CHARACTER=NULL;
if(_SUB_IDEDRAWOBJ_LONG_CHARACTER==NULL){
_SUB_IDEDRAWOBJ_LONG_CHARACTER=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_CHARACTER=0;
}
int32 *_SUB_IDEDRAWOBJ_LONG_RIGHTSIDELIMIT=NULL;
if(_SUB_IDEDRAWOBJ_LONG_RIGHTSIDELIMIT==NULL){
_SUB_IDEDRAWOBJ_LONG_RIGHTSIDELIMIT=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_RIGHTSIDELIMIT=0;
}
int32 *_SUB_IDEDRAWOBJ_LONG_CF=NULL;
if(_SUB_IDEDRAWOBJ_LONG_CF==NULL){
_SUB_IDEDRAWOBJ_LONG_CF=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_CF=0;
}
byte_element_struct *byte_element_5684=NULL;
if (!byte_element_5684){
if ((mem_static_pointer+=12)<mem_static_limit) byte_element_5684=(byte_element_struct*)(mem_static_pointer-12); else byte_element_5684=(byte_element_struct*)mem_static_malloc(12);
}
byte_element_struct *byte_element_5686=NULL;
if (!byte_element_5686){
if ((mem_static_pointer+=12)<mem_static_limit) byte_element_5686=(byte_element_struct*)(mem_static_pointer-12); else byte_element_5686=(byte_element_struct*)mem_static_malloc(12);
}
byte_element_struct *byte_element_5687=NULL;
if (!byte_element_5687){
if ((mem_static_pointer+=12)<mem_static_limit) byte_element_5687=(byte_element_struct*)(mem_static_pointer-12); else byte_element_5687=(byte_element_struct*)mem_static_malloc(12);
}
byte_element_struct *byte_element_5690=NULL;
if (!byte_element_5690){
if ((mem_static_pointer+=12)<mem_static_limit) byte_element_5690=(byte_element_struct*)(mem_static_pointer-12); else byte_element_5690=(byte_element_struct*)mem_static_malloc(12);
}
byte_element_struct *byte_element_5692=NULL;
if (!byte_element_5692){
if ((mem_static_pointer+=12)<mem_static_limit) byte_element_5692=(byte_element_struct*)(mem_static_pointer-12); else byte_element_5692=(byte_element_struct*)mem_static_malloc(12);
}
int32 *_SUB_IDEDRAWOBJ_LONG_TNUM=NULL;
if(_SUB_IDEDRAWOBJ_LONG_TNUM==NULL){
_SUB_IDEDRAWOBJ_LONG_TNUM=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_TNUM=0;
}
int32 *_SUB_IDEDRAWOBJ_LONG_TSEL=NULL;
if(_SUB_IDEDRAWOBJ_LONG_TSEL==NULL){
_SUB_IDEDRAWOBJ_LONG_TSEL=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_TSEL=0;
}
int32 *_SUB_IDEDRAWOBJ_LONG_Q=NULL;
if(_SUB_IDEDRAWOBJ_LONG_Q==NULL){
_SUB_IDEDRAWOBJ_LONG_Q=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_Q=0;
}
int32 pass5696;
int32 pass5697;
int32 *_SUB_IDEDRAWOBJ_LONG_C=NULL;
if(_SUB_IDEDRAWOBJ_LONG_C==NULL){
_SUB_IDEDRAWOBJ_LONG_C=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_C=0;
}
int64 fornext_value5699;
int64 fornext_finalvalue5699;
int64 fornext_step5699;
uint8 fornext_step_negative5699;
byte_element_struct *byte_element_5700=NULL;
if (!byte_element_5700){
if ((mem_static_pointer+=12)<mem_static_limit) byte_element_5700=(byte_element_struct*)(mem_static_pointer-12); else byte_element_5700=(byte_element_struct*)mem_static_malloc(12);
}
int32 *_SUB_IDEDRAWOBJ_LONG_WHITESPACE=NULL;
if(_SUB_IDEDRAWOBJ_LONG_WHITESPACE==NULL){
_SUB_IDEDRAWOBJ_LONG_WHITESPACE=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_WHITESPACE=0;
}
int32 *_SUB_IDEDRAWOBJ_LONG_SPACING=NULL;
if(_SUB_IDEDRAWOBJ_LONG_SPACING==NULL){
_SUB_IDEDRAWOBJ_LONG_SPACING=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_SPACING=0;
}
int32 *_SUB_IDEDRAWOBJ_LONG_F2=NULL;
if(_SUB_IDEDRAWOBJ_LONG_F2==NULL){
_SUB_IDEDRAWOBJ_LONG_F2=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_F2=0;
}
int32 *_SUB_IDEDRAWOBJ_LONG_N2=NULL;
if(_SUB_IDEDRAWOBJ_LONG_N2==NULL){
_SUB_IDEDRAWOBJ_LONG_N2=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_N2=0;
}
int64 fornext_value5702;
int64 fornext_finalvalue5702;
int64 fornext_step5702;
uint8 fornext_step_negative5702;
byte_element_struct *byte_element_5703=NULL;
if (!byte_element_5703){
if ((mem_static_pointer+=12)<mem_static_limit) byte_element_5703=(byte_element_struct*)(mem_static_pointer-12); else byte_element_5703=(byte_element_struct*)mem_static_malloc(12);
}
byte_element_struct *byte_element_5704=NULL;
if (!byte_element_5704){
if ((mem_static_pointer+=12)<mem_static_limit) byte_element_5704=(byte_element_struct*)(mem_static_pointer-12); else byte_element_5704=(byte_element_struct*)mem_static_malloc(12);
}
